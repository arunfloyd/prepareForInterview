1. What is a CDN?
2. What is AJAX?
3. What are the differences between HTML and XHTML?
4. What is responsive design?
5. What are the different types of CSS selectors?
6. What is a pseudo-class?
7. What is a CSS reset?
8. What is a CSS grid system?
9. What is a CSS preprocessor?
10. What are the benefits of using a CSS preprocessor?
11. What is Bootstrap?
12. What are the benefits of using bootstrap?
13. What is a task runner?
14. What are the benefits of using a task runner?
15. What made you become a front-end developer?
16. What is your favorite thing about being a front-end developer?

ðŸ”¥Intermediate Front-End Engineer Interview Questions-

17. What type of front-end development do you specialize in?
18. What is your favorite CSS framework?
19. How would you optimize a website's performance?
20. What is your favorite front-end development tool?
21. How would you go about debugging a website?
22. What are some common issues that you have faced with cross-browser compatibility?
23. What are some of the common front-end development challenges that you have faced?
24. What blogs do you follow when it comes to front-end development?
25. What websites are your favorite, in terms of design and development?

ðŸ”¥Advanced Front End Developer Questions-

26. Discuss the biggest achievement of your career.
27. Discuss the biggest challenge of your career.
28. What was your last project? How did it go?
29. How do you effectively manage your time?
30. What do you do when you get stuck?
31. What do you do when you get something wrong?

ðŸ”¥Technical Front-End Developer Questions-

ðŸ”¹HTML Front-End Developer Questions

32. What are the differences between HTML5 and HTML4?
33. How would you create a custom error page?
34. How do you use media queries to optimize for different screen sizes?

ðŸ”¹JavaScript Front-End Developer Questions

35. What is the difference between == and ===?
36. What is the difference between an anonymous function and a named function?
37. What is an event loop?

ðŸ”¹CSS Front-End Developer Questions

38. What are the differences between inline, embedded, and external stylesheets?
39. How do you create a responsive layout?
40. How do you use animation and transitions?







// Intellipaat Questions Air

//HTML

-> What do you understand by front-end development
-> What is HTML
-> What is the difference between HTML and HTML5
-> What are HTML tags
-> Explain the basic structure of an HTML document
-> What us the purpose of the <!DOCTYPE > delcaration
-> What is the differnce between block-level and inline elements
-> What is semantic HTML
-> Expalin the use of the <a> tags
-> What is an HTML form,and how do you create one ?
-> What is HTML entity 
-> Explain the <meta> tags
-> Differnce between <div></div> and <span></span> elements 
-> How can you add Comments in HTML 
-> Purpose of the <img>
-> Importance of validation in HTML
-> What is diff b/w GET and Position

// CSS

-> What is CSS , and its purpose ?
-> Diff inline , internal,external CSS
-> CSS box model and how it works 
-> Center an element horizontally and vertically
-> Diff display : block ...
-> Css specificity work and how it calculated
-> Box Sizing Property
-> How to create responsive design in CSS
-> pseudo Class and pseudo elements
-> Css float Property and its uses
-> How to acheive cross-browser compatibility 
-> Describe the z-index and how it affects stacking order
-> Position Property and their values
-> Css Sprite and benefits
-> Cascading in CSS
-> Diff B/w Class and index

// Javascript

-> What is JS , and how its differ from Javascript
-> Diff between null and undefined
-> Diff b/w let,const and vertically
-> Data types in JS
-> Events in JS
-> Diff '==' and '==='
-> Hoisting in JS
-> Closures 
-> Event Loop
-> Prototypal inheritance works
-> Asynchronus operation 
-> this
-> Promises in JS 
-> Callback hell 

// React JS 

-> What is ReactJS and how it differ from other JS frameworks
-> Concept of virtual document
-> Key features of React
-> JSX in react and how it differ from HTML
-> Component lifecycle in react
-> Props and state 
-> How do you optimize performance
-> Higher order Components why its useful
-> Purpose Keys
-> Context API
-> React Router Work and how to handle routing
-> What is Redux and how it manages
-> Purpose of React Hooks


1:09:43 